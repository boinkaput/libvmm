<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2023, UNSW

 SPDX-License-Identifier: BSD-2-Clause
-->
<system>
    <!-- you need the phys_addr="0x20_000_000" otherwise microkit complain about lacking of space -->
    <memory_region name="guest_ram_client" size="0x10_000_000" page_size="0x200_000"/>
    <memory_region name="guest_ram_driver" size="0x10_000_000" page_size="0x200_000" phys_addr="0x20_000_000"/>
    <memory_region name="gic_vcpu" size="0x1_000" phys_addr="0xffc06000" />

    <memory_region name="bus1" size="0x200000" phys_addr="0xff600000" />
    <!-- this bus contains the serial device -->
    <memory_region name="bus2-low" size="0x3000" phys_addr="0xff800000" />
    <memory_region name="uart" size="0x1_000" phys_addr="0xff803000" />
    <memory_region name="bus2-high" size="0x96000" phys_addr="0xff804000" />
    <memory_region name="bus3" size="0x100000" phys_addr="0xffd00000" />

    <memory_region name="usb" size="0x1000" phys_addr="0xffe09000" />
    <!-- jade: we don;t need both usb ports for this example, should figure out which one is not needed -->
    <memory_region name="usb1" size="0x40000" phys_addr="0xff400000" />
    <memory_region name="usb2" size="0x100000" phys_addr="0xff500000" />

    <memory_region name="sd" size="0x1000" phys_addr="0xffe05000" />
    <memory_region name="mmc" size="0x1000" phys_addr="0xffe07000" />
    <memory_region name="gpu" size="0x40000" phys_addr="0xffe40000" />
    <memory_region name="vpu" size="0x100000" phys_addr="0xff900000" />
    <memory_region name="eth0" size="0x10000" phys_addr="0xff3f0000" />

    <memory_region name="uio-irq" size="0x1000"/>

    <!-- shared memory for ring buffer mechanism for networking -->
    <memory_region name="net_free_rx" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="net_used_rx" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="net_free_tx" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="net_used_tx" size="0x200_000" page_size="0x200_000"/>

    <memory_region name="net_shared_dma" size="0x200_000" page_size="0x200_000" />

    <!-- <memory_region name="net_rx_cookies" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="net_tx_cookies" size="0x200_000" page_size="0x200_000"/> -->

    <protection_domain name="VMM-client" priority="100">
        <program_image path="vmm_client.elf" />
        <map mr="guest_ram_client" vaddr="0x20000000" perms="rw" setvar_vaddr="guest_ram_vaddr" />

        <!-- shared memory for ring buffer mechanism -->
        <!-- the vaddrs are just random numbers that I picked, if you're using your own dts file and
             get an `seL4_FailedLookup` error, considering change these addresses to something else
             that make more senses. -->
        <map mr="rx_free_serial_vmm_client" vaddr="0x30_000_000" perms="rw" cached="true" setvar_vaddr="serial_rx_free" />
        <map mr="rx_used_serial_vmm_client" vaddr="0x30_200_000" perms="rw" cached="true" setvar_vaddr="serial_rx_used" />
        <map mr="tx_free_serial_vmm_client" vaddr="0x30_400_000" perms="rw" cached="true" setvar_vaddr="serial_tx_free" />
        <map mr="tx_used_serial_vmm_client" vaddr="0x30_600_000" perms="rw" cached="true" setvar_vaddr="serial_tx_used" />
        <!-- sDDF related regions for virtIO console -->
        <map mr="tx_data_serial_vmm_client" vaddr="0x30_800_000" perms="rw" cached="true" setvar_vaddr="serial_tx_data" />
        <map mr="rx_data_serial_vmm_client" vaddr="0x30_c00_000" perms="rw" cached="true" setvar_vaddr="serial_rx_data" />

        <map mr="net_free_rx" vaddr="0x30_e00_000" perms="rw" cached="true" setvar_vaddr="net_client_rx_free" />
        <map mr="net_used_rx" vaddr="0x31_000_000" perms="rw" cached="true" setvar_vaddr="net_client_rx_used" />
        <map mr="net_free_tx" vaddr="0x31_200_000" perms="rw" cached="true" setvar_vaddr="net_client_tx_free" />
        <map mr="net_used_tx" vaddr="0x31_400_000" perms="rw" cached="true" setvar_vaddr="net_client_tx_used" />

        <map mr="net_shared_dma" vaddr="0x31_600_000" perms="rw" cached="true" setvar_vaddr="net_client_shared_dma_vaddr" />

        <virtual_machine name="linux-client" id="0" priority="100">
            <map mr="guest_ram_client" vaddr="0x20000000" perms="rwx" />
            <map mr="gic_vcpu" vaddr="0xffc02000" perms="rw" cached="false" />
        </virtual_machine>
    </protection_domain>

    <protection_domain name="VMM-driver" priority="100" pp="true">
        <program_image path="vmm_driver.elf" />
        <map mr="guest_ram_driver" vaddr="0x20000000" perms="rw" setvar_vaddr="guest_ram_vaddr" />

        <!-- shared memory for ring buffer mechanism -->
        <map mr="rx_free_serial_vmm_driver" vaddr="0x30_000_000" perms="rw" cached="true" setvar_vaddr="serial_rx_free" />
        <map mr="rx_used_serial_vmm_driver" vaddr="0x30_200_000" perms="rw" cached="true" setvar_vaddr="serial_rx_used" />
        <map mr="tx_free_serial_vmm_driver" vaddr="0x30_400_000" perms="rw" cached="true" setvar_vaddr="serial_tx_free" />
        <map mr="tx_used_serial_vmm_driver" vaddr="0x30_600_000" perms="rw" cached="true" setvar_vaddr="serial_tx_used" />
        <!-- sDDF related regions for virtIO console -->
        <map mr="tx_data_serial_vmm_driver" vaddr="0x30_a00_000" perms="rw" cached="true" setvar_vaddr="serial_tx_data" />
        <map mr="rx_data_serial_vmm_driver" vaddr="0x30_e00_000" perms="rw" cached="true" setvar_vaddr="serial_rx_data" />

        <!-- <map mr="net_free_rx" vaddr="0x30_e00_000" perms="rw" cached="true" setvar_vaddr="net_driver_rx_free" />
        <map mr="net_used_rx" vaddr="0x31_000_000" perms="rw" cached="true" setvar_vaddr="net_driver_rx_used" />
        <map mr="net_free_tx" vaddr="0x31_200_000" perms="rw" cached="true" setvar_vaddr="net_driver_tx_free" />
        <map mr="net_used_tx" vaddr="0x31_400_000" perms="rw" cached="true" setvar_vaddr="net_driver_tx_used" />

        <map mr="net_shared_dma" vaddr="0x31_600_000" perms="rw" cached="true" setvar_vaddr="net_driver_shared_dma_vaddr" /> -->

        <!-- @jade: do we need this? -->
        <setvar symbol="net_driver_shared_dma_paddr" region_paddr="net_shared_dma" />

        <virtual_machine name="linux-driver" id="0" priority="100" >
            <map mr="guest_ram_driver" vaddr="0x20000000" perms="rwx" />
            <map mr="gic_vcpu" vaddr="0xffc02000" perms="rw" cached="false" />

            <map mr="bus1" vaddr="0xff600000" perms="rw" cached="false" />
            <map mr="bus2-low" vaddr="0xff800000" perms="rw" cached="false" />
            <map mr="bus2-high" vaddr="0xff804000" perms="rw" cached="false" />
            <map mr="bus3" vaddr="0xffd00000" perms="rw" cached="false" />
            <map mr="usb" vaddr="0xffe09000" perms="rw" cached="false" />
            <map mr="usb1" vaddr="0xff400000" perms="rw" cached="false" />
            <map mr="usb2" vaddr="0xff500000" perms="rw" cached="false" />
            <map mr="sd" vaddr="0xffe05000" perms="rw" cached="false" />
            <map mr="mmc" vaddr="0xffe07000" perms="rw" cached="false" />
            <map mr="gpu" vaddr="0xffe40000" perms="rw" cached="false" />
            <map mr="vpu" vaddr="0xff900000" perms="rw" cached="false" />
            <map mr="eth0" vaddr="0xff3f0000" perms="rw" cached="false" />
            <map mr="uio-irq" vaddr="0x30_d00_000" perms="rw" cached="true" />

        <map mr="net_free_rx" vaddr="0x30_e00_000" perms="rw" cached="true" />
        <map mr="net_used_rx" vaddr="0x31_000_000" perms="rw" cached="true" />
        <map mr="net_free_tx" vaddr="0x31_200_000" perms="rw" cached="true" />
        <map mr="net_used_tx" vaddr="0x31_400_000" perms="rw" cached="true" />

        <map mr="net_shared_dma" vaddr="0x31_600_000" perms="rw" cached="true" />
        </virtual_machine>

        <!-- PHY IRQ -->
        <irq irq="96" id="12" />
        <!-- ethernet IRQ -->
        <irq irq="40" id="13" />

        <!-- mmc IRQ -->
        <irq irq="223" id="14" />

        <!-- sd IRQ -->
        <irq irq="222" id="16" />

        <!-- something weird -->
        <irq irq="5" id="15" />
    </protection_domain>

    <!-- Shared memory for the actual data transfered -->
    <memory_region name="tx_data_driver" size="0x200_000" page_size="0x200_000" />
    <memory_region name="rx_data_driver" size="0x200_000" page_size="0x200_000" />
    <memory_region name="tx_data_serial_vmm_client" size="0x200_000" page_size="0x200_000" />
    <memory_region name="rx_data_serial_vmm_client" size="0x200_000" page_size="0x200_000" />
    <memory_region name="tx_data_serial_vmm_driver" size="0x200_000" page_size="0x200_000" />
    <memory_region name="rx_data_serial_vmm_driver" size="0x200_000" page_size="0x200_000" />
    <!-- Regions for the shared ring buffers used by the driver and multiplexor -->
    <memory_region name="rx_free_serial_driver" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="rx_used_serial_driver" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="tx_free_serial_driver" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="tx_used_serial_driver" size="0x200_000" page_size="0x200_000"/>
    <!--
        Regions for the shared ring buffers used by the multiplexor and the
        client (in this case the client is the VMM)
    -->
    <memory_region name="tx_free_serial_vmm_client" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="tx_used_serial_vmm_client" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="rx_free_serial_vmm_client" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="rx_used_serial_vmm_client" size="0x200_000" page_size="0x200_000"/>

    <memory_region name="tx_free_serial_vmm_driver" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="tx_used_serial_vmm_driver" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="rx_free_serial_vmm_driver" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="rx_used_serial_vmm_driver" size="0x200_000" page_size="0x200_000"/>

    <!-- Multiplexor for transmit (TX) serial data -->
    <protection_domain name="serial_mux_tx" priority="100" pp="true">
        <program_image path="serial_mux_tx.elf" />
         <!-- shared memory for driver/mux ring buffer mechanism -->
        <map mr="tx_free_serial_driver" vaddr="0x4_400_000" perms="rw" cached="true" setvar_vaddr="tx_free_driver" />
        <map mr="tx_used_serial_driver" vaddr="0x4_600_000" perms="rw" cached="true" setvar_vaddr="tx_used_driver" />
        <!-- shared memory for mux/client ring buffer mechanism -->
        <!-- Ring buffers between the multiplexor and VMM client  -->
        <map mr="tx_free_serial_vmm_client" vaddr="0x3_400_000" perms="rw" cached="true" setvar_vaddr="tx_free_client" />
        <map mr="tx_used_serial_vmm_client" vaddr="0x3_600_000" perms="rw" cached="true" setvar_vaddr="tx_used_client" />
        <map mr="tx_free_serial_vmm_driver" vaddr="0x3_800_000" perms="rw" cached="true" setvar_vaddr="tx_free_client2" />
        <map mr="tx_used_serial_vmm_driver" vaddr="0x4_000_000" perms="rw" cached="true" setvar_vaddr="tx_used_client2" />
        <!-- Data regions between multiplexor/driver and vmm/mulitplexor -->
        <map mr="tx_data_driver" vaddr="0x2_200_000" perms="rw" cached="true" setvar_vaddr="tx_data_driver" />
        <!-- @ivanv: the virtual address of the data region needs to match what it is in the client as well,
             this is very fragile and should be fixed. -->
        <map mr="tx_data_serial_vmm_client" vaddr="0x30_800_000" perms="rw" cached="true" setvar_vaddr="tx_data_client" />
        <map mr="tx_data_serial_vmm_driver" vaddr="0x30_a00_000" perms="rw" cached="true" setvar_vaddr="tx_data_client2" />
    </protection_domain>

    <!-- Multiplexor for receive (RX) serial data -->
    <protection_domain name="serial_mux_rx" priority="100" pp="true">
        <program_image path="serial_mux_rx.elf" />
         <!-- shared memory for driver/mux ring buffer mechanism -->
        <map mr="rx_free_serial_driver" vaddr="0x4_000_000" perms="rw" cached="true" setvar_vaddr="rx_free_driver" />
        <map mr="rx_used_serial_driver" vaddr="0x4_200_000" perms="rw" cached="true" setvar_vaddr="rx_used_driver" />
        <!-- Ring buffers between the multiplexor and VMM client  -->
        <map mr="rx_free_serial_vmm_client" vaddr="0x4_800_000" perms="rw" cached="true" setvar_vaddr="rx_free_client" />
        <map mr="rx_used_serial_vmm_client" vaddr="0x5_000_000" perms="rw" cached="true" setvar_vaddr="rx_used_client" />
        <map mr="rx_free_serial_vmm_driver" vaddr="0x5_200_000" perms="rw" cached="true" setvar_vaddr="rx_free_client2" />
        <map mr="rx_used_serial_vmm_driver" vaddr="0x5_400_000" perms="rw" cached="true" setvar_vaddr="rx_used_client2" />

        <map mr="rx_data_driver" vaddr="0x2_600_000" perms="rw" cached="true" setvar_vaddr="rx_data_driver" />
        <map mr="rx_data_serial_vmm_client" vaddr="0x30_c00_000" perms="rw" cached="true" setvar_vaddr="rx_data_client" />
        <map mr="rx_data_serial_vmm_driver" vaddr="0x30_e00_000" perms="rw" cached="true" setvar_vaddr="rx_data_client2" />
    </protection_domain>

    <!-- The driver for talking to the hardware serial device, in this case UART -->
    <protection_domain name="uart_driver" priority="100" pp="true">
        <program_image path="uart_driver.elf" />
        <map mr="uart" vaddr="0x5_000_000" perms="rw" cached="false" setvar_vaddr="uart_base" />
        <!-- Data region -->
        <map mr="tx_data_driver" vaddr="0x2_200_000" perms="rw" cached="true" />
        <map mr="rx_data_driver" vaddr="0x2_600_000" perms="rw" cached="true" />
        <!-- shared memory for ring buffer mechanism -->
        <map mr="rx_free_serial_driver" vaddr="0x4_000_000" perms="rw" cached="true" setvar_vaddr="rx_free" />
        <map mr="rx_used_serial_driver" vaddr="0x4_200_000" perms="rw" cached="true" setvar_vaddr="rx_used" />
        <map mr="tx_free_serial_driver" vaddr="0x4_400_000" perms="rw" cached="true" setvar_vaddr="tx_free" />
        <map mr="tx_used_serial_driver" vaddr="0x4_600_000" perms="rw" cached="true" setvar_vaddr="tx_used" />
        <!-- UART IRQ -->
        <irq irq="225" id="1" trigger="edge" />
    </protection_domain>

    <channel>
        <end pd="VMM-client" id="1"/>
        <end pd="serial_mux_tx" id="1"/>
    </channel>

    <channel>
        <end pd="VMM-driver" id="1"/>
        <end pd="serial_mux_tx" id="2"/>
    </channel>

    <channel>
        <end pd="uart_driver" id="8"/>
        <end pd="serial_mux_tx" id="9"/>
    </channel>

    <channel>
        <end pd="VMM-client" id="2"/>
        <end pd="serial_mux_rx" id="1"/>
    </channel>

    <channel>
        <end pd="VMM-driver" id="2"/>
        <end pd="serial_mux_rx" id="2"/>
    </channel>

    <channel>
        <end pd="uart_driver" id="10"/>
        <end pd="serial_mux_rx" id="11"/>
    </channel>

    <channel>
        <end pd="VMM-driver" id="3"/>
        <end pd="VMM-client" id="3"/>
    </channel>

    <channel>
        <end pd="VMM-driver" id="4"/>
        <end pd="VMM-client" id="4"/>
    </channel>

    <channel>
        <end pd="VMM-driver" id="5"/>
        <end pd="VMM-client" id="5"/>
    </channel>
</system>
